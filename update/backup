#!/bin/bash
# ==========================================
# HOKAGE VPN BACKUP SYSTEM - FINAL VERSION
# Telegram: https://t.me/hokagevpnpremium
# ==========================================

# Color Palette
RED='\033[1;91m'; GREEN='\033[1;92m'; YELLOW='\033[1;93m'
BLUE='\033[1;94m'; PURPLE='\033[1;95m'; CYAN='\033[1;96m'
WHITE='\033[1;97m'; NC='\033[0m'

# Animation
SPINNER=("⣾" "⣽" "⣻" "⢿" "⡿" "⣟" "⣯" "⣷")
CHECKMARK="✓"; CROSSMARK="✗"; ARROW="➜"; DOT="•"

# ================= FUNCTIONS =================
function display_header() {
    clear
    echo -e "${PURPLE}"
    echo "╔════════════════════════════════════════════════╗"
    echo "║           ${WHITE}🚀 HOKAGE VPN BACKUP SYSTEM 🚀${PURPLE}          ║"
    echo "╠════════════════════════════════════════════════╣"
    echo "║ ${WHITE}IP: ${CYAN}$(curl -sS ipv4.icanhazip.com)${PURPLE}                     ║"
    echo "║ ${WHITE}Date: ${CYAN}$(date +"%Y-%m-%d %H:%M:%S")${PURPLE}              ║"
    echo "╚════════════════════════════════════════════════╝${NC}\n"
}

function spinner() {
    local pid=$!
    local delay=0.15
    local i=0
    while kill -0 $pid 2>/dev/null; do
        i=$(( (i+1) %8 ))
        printf "\r${CYAN}${SPINNER[$i]}${WHITE}  %s${NC}" "$1"
        sleep $delay
    done
    printf "\r\033[K"
}

function backup_item() {
    local src=$1
    local dest="$BACKUP_DIR$src"
    
    mkdir -p "$(dirname "$dest")"
    if [ -e "$src" ]; then
        cp -r "$src" "$dest" & spinner "Backup $src" && {
            echo -e "\r${WHITE}${DOT} ${CHECKMARK} ${GREEN}$src"
            return 0
        } || {
            echo -e "\r${WHITE}${DOT} ${CROSSMARK} ${RED}Failed: $src"
            return 1
        }
    else
        echo -e "${WHITE}${DOT} ${CROSSMARK} ${YELLOW}Missing: $src"
        return 1
    fi
}

# ================= MAIN SCRIPT =================
display_header

# Initialize
TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
BACKUP_DIR="/root/backup_$TIMESTAMP"
BACKUP_FILE="/root/backup_$(curl -sS ipv4.icanhazip.com | tr '.' '_')_$TIMESTAMP.zip"

mkdir -p "$BACKUP_DIR"

# Backup Items List (Edit according to your needs)
BACKUP_ITEMS=(
    "/etc/passwd"
    "/etc/group"
    "/etc/shadow"
    "/etc/gshadow"
    "/etc/crontab"
    "/etc/xray"               # Xray config
    "/usr/local/etc/xray"     # Custom Xray config
    "/var/lib/kyt"            # KYT data
    "/var/www/html"           # Web files
    # "/etc/v2ray"            # Uncomment if using V2Ray
)

# Backup Process
echo -e "${WHITE}${DOT} ${ARROW} ${CYAN}Starting Backup...${NC}"
for item in "${BACKUP_ITEMS[@]}"; do
    backup_item "$item"
done

# Compress Backup
echo -e "\n${WHITE}${DOT} ${ARROW} ${CYAN}Compressing Backup...${NC}"
cd "$BACKUP_DIR" || exit
zip -r "$BACKUP_FILE" . > /dev/null 2>&1 & spinner "Compressing" && {
    echo -e "\r${WHITE}${DOT} ${CHECKMARK} ${GREEN}Backup saved: ${WHITE}$BACKUP_FILE"
} || {
    echo -e "\r${WHITE}${DOT} ${CROSSMARK} ${RED}Compression failed!"
    exit 1
}

# Cleanup
rm -rf "$BACKUP_DIR"

# Final Output
echo -e "\n${PURPLE}╔════════════════════════════════════════════════╗"
echo "║           ${WHITE}✅ BACKUP COMPLETED SUCCESSFULLY ${PURPLE}       ║"
echo "╠════════════════════════════════════════════════╣"
echo "║ ${WHITE}File: ${CYAN}$(basename "$BACKUP_FILE")${PURPLE}                     ║"
echo "║ ${WHITE}Size: ${CYAN}$(du -sh "$BACKUP_FILE" | cut -f1)${PURPLE}                          ║"
echo "╚════════════════════════════════════════════════╝${NC}"

exit 0
