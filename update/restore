#!/bin/bash
# ==========================================
# HOKAGE VPN RESTORE SYSTEM - FINAL VERSION
# Telegram: https://t.me/hokagevpnpremium
# ==========================================

# Color Palette
RED='\033[1;91m'; GREEN='\033[1;92m'; YELLOW='\033[1;93m'
BLUE='\033[1;94m'; PURPLE='\033[1;95m'; CYAN='\033[1;96m'
WHITE='\033[1;97m'; NC='\033[0m'

# Animation
SPINNER=("⣾" "⣽" "⣻" "⢿" "⡿" "⣟" "⣯" "⣷")
CHECKMARK="✓"; CROSSMARK="✗"; ARROW="➜"; DOT="•"

# ================= FUNCTIONS =================
function display_header() {
    clear
    echo -e "${PURPLE}"
    echo "╔════════════════════════════════════════════════╗"
    echo "║          ${WHITE}🚀 HOKAGE VPN RESTORE SYSTEM 🚀${PURPLE}         ║"
    echo "╠════════════════════════════════════════════════╣"
    echo "║ ${WHITE}IP: ${CYAN}$(curl -sS ipv4.icanhazip.com)${PURPLE}                     ║"
    echo "║ ${WHITE}Date: ${CYAN}$(date +"%Y-%m-%d %H:%M:%S")${PURPLE}              ║"
    echo "╚════════════════════════════════════════════════╝${NC}\n"
}

function spinner() {
    local pid=$!
    local delay=0.15
    local i=0
    while kill -0 $pid 2>/dev/null; do
        i=$(( (i+1) %8 ))
        printf "\r${CYAN}${SPINNER[$i]}${WHITE}  %s${NC}" "$1"
        sleep $delay
    done
    printf "\r\033[K"
}

function restore_item() {
    local src="$RESTORE_DIR$1"
    local dest=$1
    
    if [ -e "$src" ]; then
        mkdir -p "$(dirname "$dest")"
        cp -r "$src" "$dest" & spinner "Restore $dest" && {
            echo -e "\r${WHITE}${DOT} ${CHECKMARK} ${GREEN}$dest"
            return 0
        } || {
            echo -e "\r${WHITE}${DOT} ${CROSSMARK} ${RED}Failed: $dest"
            return 1
        }
    else
        echo -e "${WHITE}${DOT} ${CROSSMARK} ${YELLOW}Not in backup: $dest"
        return 1
    fi
}

# ================= MAIN SCRIPT =================
display_header

# Restore Items List (MUST match backup items)
RESTORE_ITEMS=(
    "/etc/passwd"
    "/etc/group"
    "/etc/shadow"
    "/etc/gshadow"
    "/etc/crontab"
    "/etc/xray"
    "/usr/local/etc/xray"
    "/var/lib/kyt"
    "/var/www/html"
    # "/etc/v2ray"  # Uncomment if using V2Ray
)

# Select latest backup
RESTORE_FILE=$(ls -t /root/backup_*.zip | head -n1)
[ -z "$RESTORE_FILE" ] && {
    echo -e "${RED}No backup files found in /root!${NC}"
    echo -e "${YELLOW}Please run backup first.${NC}"
    exit 1
}

RESTORE_DIR="/tmp/restore_$(date +%s)"
mkdir -p "$RESTORE_DIR"

# Extract Backup
echo -e "${WHITE}${DOT} ${ARROW} ${CYAN}Extracting Backup...${NC}"
unzip -o "$RESTORE_FILE" -d "$RESTORE_DIR" > /dev/null 2>&1 & spinner "Extracting" && {
    echo -e "\r${WHITE}${DOT} ${CHECKMARK} ${GREEN}Backup extracted"
} || {
    echo -e "\r${WHITE}${DOT} ${CROSSMARK} ${RED}Extraction failed!"
    exit 1
}

# Restore Process
echo -e "\n${WHITE}${DOT} ${ARROW} ${CYAN}Restoring Files...${NC}"
for item in "${RESTORE_ITEMS[@]}"; do
    restore_item "$item"
done

# Cleanup
rm -rf "$RESTORE_DIR"

# Restart Services
echo -e "\n${WHITE}${DOT} ${ARROW} ${CYAN}Restarting Services...${NC}"
systemctl restart xray > /dev/null 2>&1 && echo -e "${WHITE}${DOT} ${CHECKMARK} ${GREEN}Xray restarted"
systemctl restart nginx > /dev/null 2>&1 && echo -e "${WHITE}${DOT} ${CHECKMARK} ${GREEN}Nginx restarted"

# Final Output
echo -e "\n${PURPLE}╔════════════════════════════════════════════════╗"
echo "║          ${WHITE}✅ RESTORE COMPLETED SUCCESSFULLY ${PURPLE}      ║"
echo "╠════════════════════════════════════════════════╣"
echo "║ ${WHITE}Restored: ${CYAN}$(basename "$RESTORE_FILE")${PURPLE}               ║"
echo "║ ${WHITE}Services: ${CYAN}xray nginx${PURPLE}                         ║"
echo "╚════════════════════════════════════════════════╝${NC}"

exit 0
